

static BlenderNormal* create(const char *path, bool complex = true);
static BlenderNode* create(const char *name, bool complex = false);
static AxisNode* create();
static FieldNode* create(int ac);
static LightNode* create(float x, float y, float z);
static MimicNode* create();	
static CubeNode* create(float x, float y, float w = 0.1f,float h = 0.1f, float =0.1f);
static ParticleNode* create(int pc=5000);
static BlenderParticle* create(const char *name, int pc
   , float scale=0.1f, float x = 0.0f, float y = 0.0f, float z = 0.0f);

struct EsNodeWrapper -> (class EsNode, "DDGraphics_EsNode")
{
	void addSub(class EsNode);
	void setColor(float r, float g, float b, float a);
	void setScale(float xs, float ys, float zs);
	void setTransform(float xf, float yf, float zf);
	void setRotate(float radians, float x, float y, float z);
	void setVisible(bool visible);
};

struct ParticleNodeWrapper ->(class ParticleNode, 
	"DDGraphics_ParticleNode", class EsNode)
{
};

struct BlenderParticleWrapper->(class BlenderParticle
  , "DDGraphics_BlenderParticle"
	, class BlenderNormal)
{
};

struct BlenderNormalWrapper -> (class BlenderNormal, "DDGraphics_BlenderNormal", class BlenderNode)
{
};


struct BlenderNodeWrapper-> (class BlenderNode, "DDGraphics_BlenderNode", class EsNode)
{
	void setFaceDefaultColor(float r, float g, float b, float a);
};

struct AxisNodeWrapper -> (class AxisNode, "DDGraphics_AxisNode", class EsNode)
{
};

struct FieldNodeWrapper->(class FieldNode, "DDGraphics_FieldNode", class EsNode)
{
};

struct LightNodeWrapper->(class LightNode, "DDGraphics_LightNode", class EsNode)
{
	void setTimeScale(float scale);
};

struct MimicNodeWrapper->(class MimicNode, "DDGraphics_MimicNode", class EsNode){};

struct CubeNodeWrapper->(class CubeNode, "DDGraphics_CubeNode", class EsNode)
{
	void shiftXZ();
};

